"""ErrorTags for simplebench.decorators in SimpleBench."""
from .base import ErrorTag
from ..enums import enum_docstrings


@enum_docstrings
class DecoratorsErrorTag(ErrorTag):
    """ErrorTags for simplebench.decorators in SimpleBench."""
    BENCHMARK_GROUP_TYPE = "BENCHMARK_GROUP_TYPE"
    """Something other than a str was passed as the group"""
    BENCHMARK_GROUP_VALUE = "BENCHMARK_GROUP_VALUE"
    """The group must be a non-empty string"""
    BENCHMARK_TITLE_TYPE = "BENCHMARK_TITLE_TYPE"
    """Something other than a str was passed as the title"""
    BENCHMARK_TITLE_VALUE = "BENCHMARK_TITLE_VALUE"
    """The title must be a non-empty string"""
    BENCHMARK_DESCRIPTION_TYPE = "BENCHMARK_DESCRIPTION_TYPE"
    """Something other than a str was passed as the description"""
    BENCHMARK_DESCRIPTION_VALUE = "BENCHMARK_DESCRIPTION_VALUE"
    """The description must be a non-empty string"""
    BENCHMARK_ITERATIONS_TYPE = "BENCHMARK_ITERATIONS_TYPE"
    """Something other than an int was passed as the iterations"""
    BENCHMARK_ITERATIONS_VALUE = "BENCHMARK_ITERATIONS_VALUE"
    """The iterations must be a positive integer"""
    BENCHMARK_WARMUP_ITERATIONS_TYPE = "BENCHMARK_WARMUP_ITERATIONS_TYPE"
    """Something other than an int was passed as the warmup_iterations"""
    BENCHMARK_WARMUP_ITERATIONS_VALUE = "BENCHMARK_WARMUP_ITERATIONS_VALUE"
    """The warmup_iterations must be a non-negative integer"""
    BENCHMARK_ROUNDS_TYPE = "BENCHMARK_ROUNDS_TYPE"
    """Something other than an int was passed as the rounds"""
    BENCHMARK_ROUNDS_VALUE = "BENCHMARK_ROUNDS_VALUE"
    """The rounds must be a positive integer"""
    BENCHMARK_MIN_TIME_TYPE = "BENCHMARK_MIN_TIME_TYPE"
    """Something other than a float was passed as the min_time"""
    BENCHMARK_MIN_TIME_VALUE = "BENCHMARK_MIN_TIME_VALUE"
    """The min_time must be a positive float"""
    BENCHMARK_MAX_TIME_TYPE = "BENCHMARK_MAX_TIME_TYPE"
    """Something other than a float was passed as the max_time"""
    BENCHMARK_MAX_TIME_VALUE = "BENCHMARK_MAX_TIME_VALUE"
    """The max_time must be a positive float"""
    BENCHMARK_VARIATION_COLS_TYPE = "BENCHMARK_VARIATION_COLS_TYPE"
    """Something other than a dict was passed as the variation_cols"""
    BENCHMARK_VARIATION_COLS_VALUE = "BENCHMARK_VARIATION_COLS_VALUE"
    """The variation_cols must be a non-empty dictionary"""
    BENCHMARK_KWARGS_VARIATIONS_TYPE = "BENCHMARK_KWARGS_VARIATIONS_TYPE"
    """Something other than a dict was passed as the kwargs_variations"""
    BENCHMARK_KWARGS_VARIATIONS_VALUE = "BENCHMARK_KWARGS_VARIATIONS_VALUE"
    """The kwargs_variations must be a non-empty dictionary"""
    BENCHMARK_OPTIONS_TYPE = "BENCHMARK_OPTIONS_TYPE"
    """Something other than a list was passed as the options"""
    BENCHMARK_OPTIONS_VALUE = "BENCHMARK_OPTIONS_VALUE"
    """The options must be a non-empty list"""
    BENCHMARK_N_TYPE = "BENCHMARK_N_TYPE"
    """Something other than an int was passed as the n"""
    BENCHMARK_N_VALUE = "BENCHMARK_N_VALUE"
    """The n must be a positive integer"""
    BENCHMARK_USE_FIELD_FOR_N_TYPE = "BENCHMARK_USE_FIELD_FOR_N_TYPE"
    """Something other than a str was passed as the use_field_for_n"""
    BENCHMARK_USE_FIELD_FOR_N_VALUE = "BENCHMARK_USE_FIELD_FOR_N_VALUE"
    """The use_field_for_n must be a non-empty string"""
    BENCHMARK_USE_FIELD_FOR_N_KWARGS_VARIATIONS = "BENCHMARK_USE_FIELD_FOR_N_KWARGS_VARIATIONS"
    """The use_field_for_n must be a key in kwargs_variations"""
    BENCHMARK_USE_FIELD_FOR_N_VALUES = "BENCHMARK_USE_FIELD_FOR_N_VALUES"
    """If use_field_for_n is provided, the matching kwargs_variations field must have positive integer values only"""
    BENCHMARK_KWARGS_VARIATIONS_KEY_TYPE = "BENCHMARK_KWARGS_VARIATIONS_KEY_TYPE"
    """Something other than a str was passed as the key in kwargs_variations"""
    BENCHMARK_KWARGS_VARIATIONS_KEY_VALUE = "BENCHMARK_KWARGS_VARIATIONS_KEY_VALUE"
    """The keys in kwargs_variations must be non-empty strings."""
    BENCHMARK_KWARGS_VARIATIONS_VALUE_TYPE = "BENCHMARK_KWARGS_VARIATIONS_VALUE_TYPE"
    """Something other than a list was passed as the value in kwargs_variations"""
    BENCHMARK_KWARGS_VARIATIONS_VALUE_VALUE = "BENCHMARK_KWARGS_VARIATIONS_VALUE_VALUE"
    """The values for each key in kwargs_variations must be a list of values, and cannot be an empty list."""
    BENCHMARK_VARIATION_COLS_KEY_TYPE = "BENCHMARK_VARIATION_COLS_KEY_TYPE"
    """Something other than a str was passed as the key in variation_cols"""
    BENCHMARK_VARIATION_COLS_KEY_VALUE = "BENCHMARK_VARIATION_COLS_KEY_VALUE"
    """The keys in variation_cols must be non-empty strings."""
    BENCHMARK_VARIATION_COLS_VALUE_TYPE = "BENCHMARK_VARIATION_COLS_VALUE_TYPE"
    """Something other than a non-empty str was passed as the value in variation_cols"""
    BENCHMARK_VARIATION_COLS_VALUE_VALUE = "BENCHMARK_VARIATION_COLS_VALUE_VALUE"
    """The values in variation_cols must be non-empty strings."""
    BENCHMARK_VARIATION_COLS_KWARGS_VARIATIONS = (
            "BENCHMARK_VARIATION_COLS_KWARGS_VARIATIONS")
    """The 'variation_cols' parameter to the @benchmark decorator requires "
    that 'kwargs_variations' also be provided."""
    BENCHMARK_VARIATION_COLS_KWARGS_VARIATIONS_MISMATCH = (
            "BENCHMARK_VARIATION_COLS_KWARGS_VARIATIONS_MISMATCH")
    """The keys in variation_cols must also be present in kwargs_variations."""
    BENCHMARK_USE_FIELD_FOR_N_INVALID_VALUE = "BENCHMARK_USE_FIELD_FOR_N_INVALID_VALUE"
    """The value in kwargs_variations for the key specified in use_field_for_n must be a positive integer."""
    BENCHMARK_USE_FIELD_FOR_N_MISSING_IN_RUNNER = (
            "BENCHMARK_USE_FIELD_FOR_N_MISSING_IN_RUNNER")
    """The use_field_for_n parameter was specified, but the matching field is missing
    from the kwargs from the runner."""
